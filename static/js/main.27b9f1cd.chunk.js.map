{"version":3,"sources":["component/counter.jsx","component/counters.jsx","reportWebVitals.js","index.js"],"names":["Counter","props","classes","counter","value","className","onClick","onIncrement","disabled","onDecrement","onDelete","id","price","Counters","useState","counters","count","setCount","increment","index","indexOf","decrement","deleteCount","filter","item","length","reduce","sum","i","window","location","reload","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAwBeA,EAtBC,SAAAC,GAEZ,IAEIC,EAAU,mBAGd,OAFAA,GAAkC,IAAxBD,EAAME,QAAQC,MAAc,UAAY,UAG9C,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,6BAAf,SACI,sBAAMA,UAAWH,EAAjB,SARsC,IAAxBD,EAAME,QAAQC,MAAc,OAASH,EAAME,QAAQC,UAUrE,sBAAKC,UAAU,yCAAf,UACI,wBAAQA,UAAU,4BAA4BC,QAAS,kBAAML,EAAMM,YAAYN,EAAME,UAArF,eACA,wBAAQE,UAAU,4BAA4BG,SAAkC,IAAxBP,EAAME,QAAQC,QAAe,EAAOE,QAAS,kBAAML,EAAMQ,YAAYR,EAAME,UAAnI,eACA,wBAAQE,UAAU,yBAAyBC,QAAS,kBAAML,EAAMS,SAAST,EAAME,QAAQQ,KAAvF,oBACZ,uBAAMN,UAAU,QAAhB,mBAA2BJ,EAAME,QAAQS,MAAQX,EAAME,QAAQC,gBC4CpDS,EA3DE,WAAO,IAAD,EAEKC,mBAAS,CACjCC,SAAW,CACT,CAACJ,GAAI,EAAGP,MAAO,EAAGQ,MAAO,KACzB,CAACD,GAAI,EAAGP,MAAO,EAAGQ,MAAO,KACzB,CAACD,GAAI,EAAGP,MAAO,EAAGQ,MAAO,KACzB,CAACD,GAAI,EAAGP,MAAO,EAAGQ,MAAO,KACzB,CAACD,GAAI,EAAGP,MAAO,EAAGQ,MAAO,QARR,mBAEdI,EAFc,KAEPC,EAFO,KAcfC,EAAY,SAAAf,GAChB,IAAMY,EAAQ,YAAOC,EAAMD,UACrBI,EAAQH,EAAMD,SAASK,QAAQjB,GACrCa,EAAMD,SAASI,GAAf,eAA4BhB,EAAQgB,IACpCJ,EAASI,GAAOf,QAChBa,EAAS,CAACF,cAGNM,EAAY,SAAAlB,GAChB,IAAMY,EAAQ,YAAOC,EAAMD,UACrBI,EAAQH,EAAMD,SAASK,QAAQjB,GACrCa,EAAMD,SAASI,GAAf,eAA4BhB,EAAQgB,IACpCJ,EAASI,GAAOf,QAChBa,EAAS,CAACF,cAGNO,EAAc,SAAAnB,GAClB,IAAMY,EAAWC,EAAMD,SAASQ,QAAO,SAAAC,GAAI,OAAIA,EAAKb,KAAOR,KAC3Dc,EAAS,CAACF,cAOZ,OACE,gCACE,gCACE,uDAA0BC,EAAMD,SAASQ,QAAO,SAAAC,GAAI,OAAIA,EAAKpB,MAAQ,KAAGqB,OAAxE,OACA,8DAAgC,4CAAUT,EAAMD,SAASW,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAOC,EAAExB,MAAQwB,EAAEhB,QAAQ,MAAxG,OACA,wBAAQP,UAAU,kBAAkBC,QATtB,WAClBuB,OAAOC,SAASC,UAQZ,sBAEDf,EAAMD,SAASiB,KAAI,SAAA7B,GAAO,OACzB,cAAC,EAAD,CAEEA,QAASA,EACTI,YAAaW,EACbT,YAAaY,EACbX,SAAUY,GAJLnB,EAAQQ,GAAK,aCvCbsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27b9f1cd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Counter = props => {\n\n    const formatCount = () => props.counter.value === 0 ? 'zero' : props.counter.value;\n\n    let classes = 'badge p-2 badge-';\n    classes+= props.counter.value === 0 ? 'warning' : 'primary';\n\n    return (  \n        <div className='row m-2'>\n            <div className='col-md-1 align-self-center'>\n                <span className={classes} >{formatCount()}</span>\n            </div>\n            <div className='col-md-2 d-flex justify-content-center'>\n                <button className='btn btn-secondary btn m-2' onClick={() => props.onIncrement(props.counter)} >+</button>\n                <button className='btn btn-secondary btn m-2' disabled={props.counter.value === 0 && true } onClick={() => props.onDecrement(props.counter)} >-</button>\n                <button className='btn btn-danger btn m-1' onClick={() => props.onDelete(props.counter.id)} >Delete</button>\n    <span className='badge' >₦{props.counter.price * props.counter.value}</span>\n            </div>\n        </div>\n    );\n}\n \nexport default Counter;","import React, { useState } from 'react';\nimport Counter from './counter';\n\nconst Counters = () => {\n\n  const [count, setCount] = useState({\n    counters : [\n      {id: 1, value: 0, price: 320},\n      {id: 2, value: 0, price: 500},\n      {id: 3, value: 0, price: 250},\n      {id: 4, value: 0, price: 310},\n      {id: 5, value: 0, price: 400}\n    ]\n  });\n\n  \n\n  const increment = counter => {\n    const counters = [...count.counters];\n    const index = count.counters.indexOf(counter);\n    count.counters[index] = {...counter[index]};\n    counters[index].value++;\n    setCount({counters});\n  };\n  \n  const decrement = counter => {\n    const counters = [...count.counters];\n    const index = count.counters.indexOf(counter);\n    count.counters[index] = {...counter[index]};\n    counters[index].value--;\n    setCount({counters});\n  };\n\n  const deleteCount = counter => {\n    const counters = count.counters.filter(item => item.id !== counter);\n    setCount({counters});\n  };\n\n  const handleReset = () => {\n    window.location.reload();\n  }\n\n  return (  \n    <div>\n      <div>\n        <h3>Total items in cart: {count.counters.filter(item => item.value > 0).length} </h3>\n        <p>Total price of item in cart: <strong>₦{count.counters.reduce((sum, i) => (sum += i.value * i.price), 0)}</strong> </p>\n        <button className='btn btn-primary' onClick={handleReset} >reset</button>\n      </div>\n      {count.counters.map(counter => (\n        <Counter \n          key={counter.id + '24'}\n          counter={counter}\n          onIncrement={increment}\n          onDecrement={decrement}\n          onDelete={deleteCount}\n        />\n      ))}\n    </div>\n  );\n}\n \nexport default Counters;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Counters from './component/counters';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counters />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}